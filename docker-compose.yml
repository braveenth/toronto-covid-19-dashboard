version: '2.2'
services:

  torontocoviddata:
    build: .
    container_name: torontocoviddata
    volumes:
      - toronto_covid_data:/output_data
    networks:
      - elastic

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=es-docker-cluster
      # - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - elastic

  # es02:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
  #   container_name: es02
  #   environment:
  #     - node.name=es02
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es03
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data02:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic

  # es03:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
  #   container_name: es03
  #   environment:
  #     - node.name=es03
  #     - cluster.name=es-docker-cluster
  #     - discovery.seed_hosts=es01,es02
  #     - cluster.initial_master_nodes=es01,es02,es03
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - data03:/usr/share/elasticsearch/data
  #   networks:
  #     - elastic

  kibana:
    image: docker.elastic.co/kibana/kibana:7.12.0
    container_name: kib01
    depends_on:
      - elasticsearch
      # - es02
      # - es03
    ports:
      - 5601:5601
    volumes:
      - data03:/usr/share/kibana/data
      - ./kibana_configuration/kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elastic

  # zookeeper:
  #   image: confluentinc/cp-zookeeper:6.1.0
  #   hostname: zookeeper
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000

  #   networks:
  #     - elastic

  # broker:
  #   image: confluentinc/cp-enterprise-kafka:6.1.0
  #   hostname: broker
  #   container_name: broker
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - "29092:29092"
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #   networks:
  #     - elastic

  # ksqldb-server:
  #   image: confluentinc/ksqldb-server:0.15.0
  #   hostname: ksqldb-server
  #   container_name: ksqldb-server
  #   depends_on:
  #     - broker
  #   ports:
  #     - "8088:8088"
  #   environment:
  #     KSQL_LISTENERS: http://0.0.0.0:8088
  #     KSQL_BOOTSTRAP_SERVERS: broker:9092
  #     KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
  #     KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
  #   networks:
  #     - elastic

  # ksqldb-cli:
  #   image: confluentinc/ksqldb-cli:0.15.0
  #   container_name: ksqldb-cli
  #   depends_on:
  #     - broker
  #     - ksqldb-server
  #   entrypoint: /bin/sh
  #   tty: true
  #   networks:
  #     - elastic

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.12.0
    container_name: filebeat
    volumes:
      #- toronto_covid_data:/filebeat_data
      - ./filebeat_configuration/filebeat.yml:/usr/share/filebeat/filebeat.yml
      #- ./covid_cases:/var/log/covid_cases
      - toronto_covid_data:/var/log/covid_cases
    depends_on:
      - torontocoviddata
      - kibana
      - elasticsearch
    networks:
      - elastic
      
  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      #- toronto_covid_data:/filebeat_data
      - ./grafana_configuration/data/:/var/lib/grafana/test/
    depends_on:
      - torontocoviddata
      - kibana
      - elasticsearch
    ports:
      - 3000:3000
    networks:
      - elastic

volumes:
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
  data04:
    driver: local
  toronto_covid_data:
    driver: local

networks:
  elastic:
    driver: bridge